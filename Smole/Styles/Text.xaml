<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Smole"
                    xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!-- Necessary Styles -->
    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>

    </ResourceDictionary.MergedDictionaries>

    <!-- TextIcon -->
    <materialdesign:PackIcon x:Key="mLoading" Kind="Loading"/>

    <materialdesign:PackIcon x:Key="mSetting" Kind="Settings" Width="30" Height="30"
                             Foreground="{StaticResource OrangeBrush}"/>
    <materialdesign:PackIcon x:Key="mBLSetting" Kind="Settings" Width="25" Height="25"
                             Foreground="{StaticResource BackAppButtonBrush}"/>

    <materialdesign:PackIcon x:Key="mLeftArrow" Kind="ArrowLeft" Width="50" Height="50"
                             Foreground="#303030"/>
    <materialdesign:PackIcon x:Key="mHome" Kind="Home"/>
    <materialdesign:PackIcon x:Key="mMenu" Kind="Menu"/>
    <materialdesign:PackIcon x:Key="mSearch" Kind="Search"/>
    <materialdesign:PackIcon x:Key="mPlus" Kind="Plus"/>
    <materialdesign:PackIcon x:Key="mVerticalMenu" Kind="More"/>
    <materialdesign:PackIcon x:Key="mUserInfo" Kind="User"/>
    <materialdesign:PackIcon x:Key="mHelp" Kind="HelpBox"/>

    <!-- TextBlocksBold Styles -->
    <Style x:Key="BoldTextBlockStyle" TargetType="TextBlock">

        <Setter Property="FontSize" Value="{StaticResource LargeFont}"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold"/>

    </Style>

    <!-- TextBlocksborovInfoBold Styles -->
    <Style x:Key="borovInfoBoldTextBlockStyle" TargetType="TextBlock">

        <Setter Property="FontSize" Value="{StaticResource LargeFont}"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Bold"/>

    </Style>

    <!-- TextBlocksNormal Styles -->
    <Style x:Key="NormalTextBlockStyle" TargetType="TextBlock">

        <Setter Property="FontSize" Value="{StaticResource LargeFont}"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />

    </Style>

    <!-- TextBoxesStyles -->
    <Style TargetType="TextBox">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource LargeFont}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="5 3" />
        <Setter Property="BorderBrush" Value="{StaticResource LightBrush}" />
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Background" Value="{x:Null}" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="TextBox">

                    <Grid>

                        <Border x:Name="border" 
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">

                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>

                        </Border>

                        <TextBlock x:Name="tbText"
                                   Text="{TemplateBinding Tag}"
                                   WindowChrome.IsHitTestVisibleInChrome="True"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Center"
                                   Foreground="{StaticResource DarkBrush}"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

                            <TextBlock.Style>

                                <Style TargetType="{x:Type TextBlock}">

                                    <Setter Property="Visibility" Value="Collapsed" />

                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">

                                            <Setter Property="Visibility" Value="Visible" />

                                        </DataTrigger>

                                    </Style.Triggers>

                                </Style>

                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundBrush}"/>
                            <Setter Property="FontSize" TargetName="tbText" Value="{StaticResource LargeMoreFont}"/>

                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">

                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundBrush}"/>
                            <Setter Property="FontSize" TargetName="tbText" Value="{StaticResource LargeMoreFont}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="EnterTextBox">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource LargeFont}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="5 3" />
        <Setter Property="BorderBrush" Value="{StaticResource LightBrush}" />
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Background" Value="{x:Null}" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>

                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False" 
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>

                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                   x:Name="tbText"
                                   Text="{TemplateBinding Tag}"
                                   WindowChrome.IsHitTestVisibleInChrome="True"
                                   Foreground="Black"
                                   Padding="{TemplateBinding Padding}"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

                            <TextBlock.Style>

                                <Style TargetType="{x:Type TextBlock}">

                                    <Setter Property="Visibility" Value="Collapsed" />

                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">

                                            <Setter Property="Visibility" Value="Visible" />

                                        </DataTrigger>

                                    </Style.Triggers>

                                </Style>

                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!-- PasswordBoxesStyles -->
    <Style TargetType="{x:Type PasswordBox}">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource LargeFont}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="5 3" />
        <Setter Property="BorderBrush" Value="{StaticResource LightBrush}" />
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Width" Value="200"/>
        <Setter Property="Background" Value="{x:Null}" />

        <Setter Property="local:MonitorPasswordProperty.Value" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <Grid>

                        <Border x:Name="border" 
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">

                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>

                        </Border>

                        <TextBlock x:Name="tbText"
                                   Text="{TemplateBinding Tag}"
                                   WindowChrome.IsHitTestVisibleInChrome="True"
                                   Padding="{TemplateBinding Padding}"
                                   Visibility="{TemplateBinding local:HasTextProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                   VerticalAlignment="Center"
                                   Foreground="{StaticResource DarkBrush}"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

                            <TextBlock.Style>

                                <Style TargetType="{x:Type TextBlock}">

                                    <Setter Property="Visibility" Value="Collapsed" />

                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">

                                            <Setter Property="Visibility" Value="Visible" />

                                        </DataTrigger>

                                    </Style.Triggers>

                                </Style>

                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundBrush}"/>
                            <Setter Property="FontSize" TargetName="tbText" Value="{StaticResource LargeMoreFont}"/>

                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="True">

                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource BackgroundBrush}"/>
                            <Setter Property="FontSize" TargetName="tbText" Value="{StaticResource LargeMoreFont}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="EnterPasswordBox">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource LargeFont}" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="5 3" />
        <Setter Property="BorderBrush" Value="{StaticResource LightBrush}" />
        <Setter Property="MaxLength" Value="20"/>
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="Width" Value="200"/>
        <Setter Property="Background" Value="{x:Null}" />

        <Setter Property="local:MonitorPasswordProperty.Value" Value="True" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <Grid>

                        <Border x:Name="border" 
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">

                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>

                        </Border>

                        <TextBlock x:Name="tbText"
                                   Text="{TemplateBinding Tag}"
                                   WindowChrome.IsHitTestVisibleInChrome="True"
                                   Padding="{TemplateBinding Padding}"
                                   Visibility="{TemplateBinding local:HasTextProperty.Value, Converter={local:BooleanToVisiblityConverter}}"
                                   VerticalAlignment="Center"
                                   Foreground="{StaticResource DarkBrush}"
                                   HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

                            <TextBlock.Style>

                                <Style TargetType="{x:Type TextBlock}">

                                    <Setter Property="Visibility" Value="Collapsed" />

                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">

                                            <Setter Property="Visibility" Value="Visible" />

                                        </DataTrigger>

                                    </Style.Triggers>

                                </Style>

                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!-- SpinningText -->
    <Style TargetType="{x:Type TextBlock}" x:Key="SpinningText">

        <Setter Property="Text" Value="🛈" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform></RotateTransform>
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                    From="0"
                    To="360"
                    Duration="0:0:2"
                    RepeatBehavior="Forever" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>

    </Style>

</ResourceDictionary>