<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Smole">

    <!-- Necessary Styles -->
    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Text.xaml"/>

    </ResourceDictionary.MergedDictionaries>

    <!-- Button styles -->
    <!-- System Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Padding" Value="2"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">

                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <!-- AppButtons -->
    <Style x:Key="AppPanelButtons" TargetType="Button">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            CornerRadius="0">

                        <TextBlock VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Text="{TemplateBinding Content}" />

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="true">

                <Setter Property="Background" Value="{StaticResource MoreLightBrush}"/>

            </Trigger>

            <Trigger Property="IsPressed" Value="true">

                <Setter Property="Background" Value="{StaticResource MoreMoreLightBrush}"/>

            </Trigger>

        </Style.Triggers>

    </Style>

    <!-- Close Button -->
    <Style x:Key="CloseButtons" 
           TargetType="{x:Type Button}" 
           BasedOn="{StaticResource AppPanelButtons}">

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">

                <Setter Property="Background" Value="{StaticResource CloseRedBrush}" />
                <Setter Property="Foreground" Value="White" />

            </Trigger>

            <Trigger Property="IsPressed" Value="True">

                <Setter Property="Background" Value="Red"/>
                <Setter Property="Foreground" Value="White"/>

            </Trigger>

        </Style.Triggers>

    </Style>

    <!-- Base Application Button -->
    <Style TargetType="Button">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource OrangeBrush}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{StaticResource LargeFont}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0 15 0 0"/>

        <Setter Property="local:IsBusyProperty.Value" Value="False"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border x:Name="border"
                            CornerRadius="10"
                            Background="{TemplateBinding Background}">

                        <Grid>

                            <TextBlock Text="{TemplateBinding Content}"
                                       Visibility="{TemplateBinding local:IsBusyProperty.Value,
                                Converter={local:BooleanToVisiblityConverter}}"
                                       FontSize="{TemplateBinding FontSize}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                       Margin="{TemplateBinding Padding}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                            <Label Visibility="{TemplateBinding local:IsBusyProperty.Value,
                                Converter={local:BooleanToVisiblityConverter},
                                ConverterParameter=True}"
                                   FontSize="{TemplateBinding FontSize}"
                                   Foreground="{TemplateBinding Foreground}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                   Style="{StaticResource SpinningText}"/>

                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">

                            <BeginStoryboard>

                                <Storyboard>

                                    <ColorAnimation To="{StaticResource BackAppButtonColor}" 
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color" />

                                </Storyboard>

                            </BeginStoryboard>

                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">

                            <BeginStoryboard>

                                <Storyboard>

                                    <ColorAnimation From="{StaticResource WindowMoreBlueColor}"
                                                    Duration="0:0:0.3" 
                                                    Storyboard.TargetName="border" 
                                                    Storyboard.TargetProperty="Background.Color"/>
                                </Storyboard>

                            </BeginStoryboard>

                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsPressed" Value="True">

                <Setter Property="Background" Value="{StaticResource MoreBackAppButtonBrush}"/>

            </Trigger>

        </Style.Triggers>

    </Style>

    <!-- DescriptionButton -->
    <Style TargetType="Button" x:Key="DescriptionButton">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="{StaticResource MoreRegularFont}"/>
        <Setter Property="Margin" Value="0 10"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="Button">

                    <Border Background="{TemplateBinding Background}">

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">

                <Setter Property="Foreground" Value="{StaticResource OrangeBrush}"/>

            </Trigger>

            <Trigger Property="IsPressed" Value="True">

                <Setter Property="Foreground" Value="{StaticResource LightOrangeBrush}"/>

            </Trigger>

        </Style.Triggers>

    </Style>

    <!-- Back Button -->
    <Style x:Key="MenuButtons" TargetType="Button">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="{StaticResource RegularFont}"/>

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ButtonBase}">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}">

                        <!-- Add a render scale transform -->
                        <Border.RenderTransform>

                            <ScaleTransform />

                        </Border.RenderTransform>

                        <Border.RenderTransformOrigin>

                            <Point X="0.5" Y="0.5" />

                        </Border.RenderTransformOrigin>

                        <TextBlock Text="{TemplateBinding Content}" 
                                   Focusable="False" 
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">

                            <BeginStoryboard>

                                <Storyboard>

                                    <DoubleAnimation To="1.2" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1.2" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />

                                </Storyboard>

                            </BeginStoryboard>

                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">

                            <BeginStoryboard>

                                <Storyboard>

                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)" />
                                    <DoubleAnimation To="1" Duration="0:0:0.15" Storyboard.TargetName="border" Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)" />

                                </Storyboard>

                            </BeginStoryboard>

                        </EventTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

</ResourceDictionary>